{"version":3,"sources":["RegistrationStatusLockTarget.ts","AssignmentsFindView/findAssignments.worker.ts","Plan.ts","badges.tsx","AssignmentsFindView/index.tsx","safely.ts","CollectivelyCourseSetView.tsx","courses/index.ts","FilterType.ts","ExportView.tsx","getValueFromModal.tsx","ImportView.tsx","Requirements/Requirements.ts","Requirements/getRequirementAndDictionaryFromJSON.ts","requirementInstances/index.ts","RequirementView/RequirementSummaryView.tsx","RequirementView/RequirementWithChildrenView.tsx","RequirementView/CourseList.tsx","RequirementView/RequirementWithCoursesView.tsx","RequirementView/SelectionRequirementView.tsx","RequirementView/InnerRequirementView.tsx","RequirementView/ReassignmentConfirmationModal.tsx","RequirementView/index.tsx","App.tsx","reportWebVitals.ts","index.tsx","RequirementView/RequirementWithCoursesView.module.css"],"names":["RegistrationStatusLockTarget","Worker","RegistrationStatus","isRegistrable","course","courseToStatus","some","course1","status","title","Unregistered","getNextStatus","currentStatus","lockTarget","All","Acquired","toJSON","courseToRequirement","requirementToOthersCount","selectionNameToOptionName","Object","fromEntries","map","code","requirement","id","creditsCounts","fromJSON","json","codeToCourse","idToRequirement","Map","entries","get","undefined","Error","courseCode","requirementId","emptyPlan","CourseRegistrationStatusBadge","Badge","variant","Registered","RequirementRegistrationStatusBadge","DisabledCourseBadge","OverlayTrigger","overlay","Tooltip","AssignmentsFindView","show","plan","selectsAutomatically","additionalInformation","cancelButtonLabel","onCancel","onSubmit","useState","worker","setWorker","isLoading","setIsLoading","plans","setPlans","onMessage","useCallback","event","data","length","nextPlans","planJSON","useEffect","AssignmentsFindWorker","postMessage","requirementJSON","terminate","addEventListener","removeEventListener","Modal","onHide","Header","closeButton","Title","Body","ListGroup","className","plan1","getStatus","getRegisteredCreditCounts","Item","action","onClick","acquired","registered","selectionName","optionName","Spinner","animation","Footer","Button","AssignmentsFindButton","setShow","handleSubmit","nextPlan","safely","f","args","placeholder","trim","Table1","codeColumnIndex","titleColumnIndex","creditsCountColumnIndex","courseAndRecordPairs","setCourseToStatus","firstCourse","firstRecord","record","firstRecordIsHeader","courseAndRecordPairsWithoutHeader","slice","Table","bordered","hover","responsive","style","whiteSpace","cell","index","filter","_","recordIndex","getTdContent","mapCourse","mapRecord","recordValue","tds0","recordTitle","textAlign","creditCount","recordCreditsCount","tds1","tds","nextStatus","None","cursor","getColumnIndex","reduce","previous","count","Modal1","setAllCourseStatus","nextCourseToStatus","set","setAllCourseStatusToRegistered","setAllCourseStatusToAcquired","size","ButtonGroup","Modal0","csv","setCSV","validated","setValidated","records","parse","definedCoursesCount","feedback","handleCSVChange","nextCSV","handleFileChange","file","target","files","item","reader","FileReader","result","readAsText","Form","Group","Label","Control","as","rows","value","onChange","isInvalid","Feedback","type","accept","disabled","CollectivelyCourseSetView","page","setPage","setCourseAndRecordPairs","setCodeColumnIndex","has","courses","FilterType","ExportView","jsonText","JSON","stringify","url","setURL","blob","Blob","onLoad","readAsDataURL","readOnly","onFocus","e","select","href","download","initialModalsAndCount","modals","useModals","modalsAndCount","setModalsAndCount","getValueFromModal","ModalType","props","a","Promise","resolve","reject","modal","onReturn","onExited","key","ImportConfirmationModal","ImportView","setJSONText","handleJSONChange","nextJSON","preventDefault","ButtonToolbar","Requirement","name","this","requiredCreditCount","getRequiredCreditCount","registeredCreditCounts","min","RequirementWithChildren","description","children","includesExcess","creditCounts","child","childRegisteredCreditCount","Math","max","childRequiredCreditCount","flatMap","getVisibleRequirements","RequirementWithCourses","allowsOthers","othersCount","courseStatus","SelectionRequirement","options0","options","optionNameToRequirement","selectedOptionName","getSelectedOptionName","selectedRequirement","getSelectedRequirement","numberOrRangeToRange","numberOrRange","getInnerRequirementAndDictionaryFromJSON","requirementNameToCount","requirementAndDictionaryPairs","optionAndDictionaryArray","optionJSON","option","getRequirementAndDictionaryFromJSON","coins17_0","mast17_0","klis17_0","CreditsCountLabelDelimiter","ExceededCreditsCountLabel","creditsCount","CreditsCountLabels","exceededCreditsCount","requiredCreditsCount","RequirementSummaryView","RequirementWithChildrenView","filterType","onCourseClick","onOthersCountsChange","onSelectionChange","CourseListItem","newRequirement","currentRequirement","isRegisteredButInvalid","isRegistrable0","handleClick","CourseList","OthersCountInput","currentOthersCount","setAcquired","registeredExcludingAcquired","setRegisteredExcludingAcquired","registeredIncludingAcquired","setRegisteredIncludingAcquired","computed","Card","border","Row","Col","md","step","RequirementWithCoursesView","open","setOpen","showsInput","setShowsInput","Valid","onCollapseExiting","root","closest","styles","rect","getBoundingClientRect","sticky","getElementsByClassName","stickyTop","parseInt","getComputedStyle","getPropertyValue","top","window","scrollTo","scrollY","block","Collapse","in","onExiting","SelectionRequirementView","handleSelectionChange","InputGroup","Prepend","Text","custom","InnerRequirementView","ReassignmentConfirmationModal","body","RequirementView","handleCourseClick","newOthersCount","newOptionName","nextSelectionNameToOptionName","visibleRequirements","nextCourseToRequirement","includes","StatusAlert","Alert","RequirementWithConfiguration","setPlan","setFilterType","useLockTarget","setLockTarget","Tab","Container","defaultActiveKey","Nav","Link","eventKey","Content","Pane","label","lockTarget1","Check","checked","InnerMain","requirementName","usePlan","Dropdown","Toggle","overflow","textOverflow","Menu","values","to","active","Main","useParams","useLocalStorage","storedJSON","setStoredJSON","storedPlanEntries","planMap0","setPlanMap0","planMap","setPlanMap","newPlanMap","planJSONEntries","usePlanMap","newPlan","App","Navbar","bg","Brand","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d41064b3.chunk.js","sourcesContent":["enum RegistrationStatusLockTarget {\n  Unregistered = 0,\n  Acquired = 2,\n  All = 3,\n  None = 4,\n}\n\nexport default RegistrationStatusLockTarget;\n","export default function() {\n  return new Worker(__webpack_public_path__ + \"static/js/findAssignments.worker.64379bbf.worker.js\");\n}\n","import type Course from \"./Course\";\nimport RegistrationStatusLockTarget from \"./RegistrationStatusLockTarget\";\nimport type { RequirementWithCourses } from \"./Requirements\";\n\nexport interface RegisteredCreditCounts {\n  acquired: number;\n  registered: number;\n}\n\nexport default interface Plan {\n  readonly courseToStatus: ReadonlyMap<Course, RegistrationStatus>;\n  readonly courseToRequirement: ReadonlyMap<Course, RequirementWithCourses>;\n  readonly requirementToOthersCount: ReadonlyMap<\n    RequirementWithCourses,\n    RegisteredCreditCounts\n  >;\n  readonly selectionNameToOptionName: ReadonlyMap<string, string>;\n}\n\nexport type CourseCode = string;\nexport type RequirementId = string;\n\nexport enum RegistrationStatus {\n  Unregistered = 0,\n  Registered = 1,\n  Acquired = 2,\n}\n\nexport const isRegistrable = ({\n  course,\n  courseToStatus,\n}: {\n  course: Course;\n  courseToStatus: ReadonlyMap<Course, RegistrationStatus>;\n}) =>\n  ![...courseToStatus].some(\n    ([course1, status]) =>\n      course1 !== course &&\n      course1.title === course.title &&\n      status !== RegistrationStatus.Unregistered\n  );\n\nexport const getNextStatus = ({\n  currentStatus,\n  lockTarget,\n}: {\n  currentStatus: RegistrationStatus;\n  lockTarget: RegistrationStatusLockTarget;\n}): RegistrationStatus => {\n  switch (lockTarget) {\n    case RegistrationStatusLockTarget.All:\n      return currentStatus;\n    case RegistrationStatusLockTarget.Acquired:\n    case RegistrationStatusLockTarget.Unregistered:\n      const difference = (3 + lockTarget - currentStatus) % 3;\n      switch (difference) {\n        case 0:\n          return currentStatus;\n        case 1:\n          return (currentStatus + 2) % 3;\n        default:\n          return (currentStatus + 1) % 3;\n      }\n    default:\n      return (currentStatus + 1) % 3;\n  }\n};\n\nexport interface PlanJSON {\n  readonly courseToStatus: { [courseCode: string]: RegistrationStatus };\n  readonly courseToRequirement: { [courseCode: string]: RequirementId };\n  readonly requirementToOthersCount: {\n    [requirementName: string]: RegisteredCreditCounts;\n  };\n  readonly selectionNameToOptionName: { [selectionName: string]: string };\n}\n\nexport const toJSON = ({\n  courseToStatus,\n  courseToRequirement,\n  requirementToOthersCount,\n  selectionNameToOptionName,\n}: Plan): PlanJSON => ({\n  courseToStatus: Object.fromEntries(\n    [...courseToStatus].map(([course, status]) => [course.code, status])\n  ),\n  courseToRequirement: Object.fromEntries(\n    [...courseToRequirement].map(([course, requirement]) => [\n      course.code,\n      requirement.id,\n    ])\n  ),\n  requirementToOthersCount: Object.fromEntries(\n    [...requirementToOthersCount].map(([requirement, creditsCounts]) => [\n      requirement.id,\n      creditsCounts,\n    ])\n  ),\n  selectionNameToOptionName: Object.fromEntries(selectionNameToOptionName),\n});\n\nexport const fromJSON = (\n  json: PlanJSON,\n  {\n    codeToCourse,\n    idToRequirement,\n  }: {\n    codeToCourse: ReadonlyMap<CourseCode, Course>;\n    idToRequirement: ReadonlyMap<RequirementId, RequirementWithCourses>;\n  }\n): Plan => {\n  const courseToStatus = new Map(\n    Object.entries(json.courseToStatus).map(([code, status]) => {\n      const course = codeToCourse.get(code);\n      if (course === undefined) {\n        throw new Error();\n      }\n      return [course, status];\n    })\n  );\n\n  const courseToRequirement = new Map(\n    Object.entries(json.courseToRequirement).map(\n      ([courseCode, requirementId]) => {\n        const course = codeToCourse.get(courseCode);\n        const requirement = idToRequirement.get(requirementId);\n\n        if (course === undefined) {\n          throw new Error();\n        }\n        if (requirement === undefined) {\n          throw new Error();\n        }\n\n        return [course, requirement];\n      }\n    )\n  );\n\n  const requirementToOthersCount = new Map(\n    Object.entries(json.requirementToOthersCount).map(\n      ([requirementId, creditsCounts]) => {\n        const requirement = idToRequirement.get(requirementId);\n        if (requirement === undefined) {\n          throw new Error();\n        }\n        return [requirement, creditsCounts];\n      }\n    )\n  );\n\n  const selectionNameToOptionName = new Map(\n    Object.entries(json.selectionNameToOptionName)\n  );\n\n  return {\n    courseToStatus,\n    courseToRequirement,\n    requirementToOthersCount,\n    selectionNameToOptionName,\n  };\n};\n\nexport const emptyPlan: Plan = {\n  courseToStatus: new Map(),\n  courseToRequirement: new Map(),\n  requirementToOthersCount: new Map(),\n  selectionNameToOptionName: new Map(),\n};\n","import { Badge, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { RegistrationStatus } from \"./Plan\";\n\nexport const CourseRegistrationStatusBadge: React.FC<{\n  status: RegistrationStatus;\n}> = ({ status }) => {\n  switch (status) {\n    case RegistrationStatus.Acquired:\n      return <Badge variant=\"success\">修得済み</Badge>;\n    case RegistrationStatus.Registered:\n      return <Badge variant=\"primary\">履修する</Badge>;\n    default:\n      return <Badge variant=\"secondary\">履修しない</Badge>;\n  }\n};\n\nexport const RequirementRegistrationStatusBadge: React.FC<{\n  status: RegistrationStatus;\n}> = ({ status }) => {\n  switch (status) {\n    case RegistrationStatus.Acquired:\n      return <Badge variant=\"success\">修得OK</Badge>;\n    case RegistrationStatus.Registered:\n      return <Badge variant=\"primary\">履修OK</Badge>;\n    default:\n      return <Badge variant=\"secondary\">不足</Badge>;\n  }\n};\n\nexport const DisabledCourseBadge: React.FC<{ id: string }> = ({ id }) => (\n  <OverlayTrigger\n    overlay={\n      <Tooltip id={id}>\n        ほかに同名の科目を履修しているため、この科目は履修できません。\n      </Tooltip>\n    }\n  >\n    <Badge variant=\"secondary\">履修不可</Badge>\n  </OverlayTrigger>\n);\n","import { useCallback, useEffect, useState } from \"react\";\nimport { Button, ListGroup, Modal, Spinner } from \"react-bootstrap\";\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport AssignmentsFindWorker from \"worker-loader!./findAssignments.worker\";\nimport { RequirementRegistrationStatusBadge } from \"../badges\";\nimport type Course from \"../Course\";\nimport Plan, { fromJSON, PlanJSON, toJSON } from \"../Plan\";\nimport type Requirements from \"../Requirements\";\nimport type { RequirementWithCourses } from \"../Requirements\";\n\nconst AssignmentsFindView: React.FC<{\n  show: boolean;\n  requirement: Requirements;\n  idToRequirement: ReadonlyMap<string, RequirementWithCourses>;\n  codeToCourse: ReadonlyMap<string, Course>;\n  plan: Plan;\n  selectsAutomatically: boolean;\n  additionalInformation: React.ReactNode;\n  cancelButtonLabel: string;\n  onCancel: () => void;\n  onSubmit: (plan: Plan) => void;\n}> = ({\n  show,\n  requirement,\n  idToRequirement,\n  codeToCourse,\n  plan,\n  selectsAutomatically,\n  additionalInformation,\n  cancelButtonLabel,\n  onCancel,\n  onSubmit,\n}) => {\n  const [worker, setWorker] = useState<Worker | undefined>(undefined);\n  const [isLoading, setIsLoading] = useState(false);\n  const [plans, setPlans] = useState<readonly Plan[] | undefined>(undefined);\n\n  const onMessage = useCallback(\n    (event: MessageEvent) => {\n      if (event.data === \"done\") {\n        if (selectsAutomatically) {\n          if (plans === undefined) {\n            onCancel();\n          } else if (plans[0] !== undefined && plans.length === 1) {\n            onSubmit(plans[0]);\n          } else {\n            setIsLoading(false);\n          }\n        } else {\n          setIsLoading(false);\n        }\n      } else {\n        const planJSONList: readonly PlanJSON[] = event.data;\n        const nextPlans: readonly Plan[] = planJSONList.map((planJSON) =>\n          fromJSON(planJSON, { codeToCourse, idToRequirement })\n        );\n        setPlans(nextPlans);\n      }\n    },\n    [\n      codeToCourse,\n      idToRequirement,\n      onCancel,\n      onSubmit,\n      plans,\n      selectsAutomatically,\n    ]\n  );\n\n  useEffect(() => {\n    if (show) {\n      setIsLoading(true);\n      setPlans(undefined);\n      const worker = new AssignmentsFindWorker();\n      setWorker(worker);\n      worker.postMessage({\n        codeToCourse,\n        planJSON: toJSON(plan),\n        requirementJSON: requirement.toJSON(),\n      });\n\n      return () => {\n        worker.terminate();\n        setWorker(undefined);\n      };\n    }\n  }, [codeToCourse, plan, requirement, show]);\n\n  useEffect(() => {\n    worker?.addEventListener(\"message\", onMessage);\n    return () => worker?.removeEventListener(\"message\", onMessage);\n  }, [onMessage, worker]);\n\n  return (\n    <Modal show={show} onHide={onCancel}>\n      <Modal.Header closeButton>\n        <Modal.Title>最適な割り当ての自動探索</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {isLoading ? (\n          <>\n            <p>\n              全体として修得単位数や履修単位数が最大となるような割り当てを探しています。\n              この処理は短時間で終わらない場合があります。\n            </p>\n            {plans === undefined ? (\n              <></>\n            ) : (\n              <p>\n                これまでに見つかった割り当てが以下に表示されています。\n                まだ最適な割り当てがほかにないか探していますが、選択してすぐに適用することもできます。\n              </p>\n            )}\n          </>\n        ) : plans === undefined ? (\n          <p>\n            割り当てを探しましたが、要件を満たす割り当ては見つかりませんでした。\n          </p>\n        ) : (\n          <p>\n            全体として修得単位数や履修単位数が最大となるような割り当てとして、以下のものが見つかりました。\n            適用するものを選択してください。\n          </p>\n        )}\n\n        {additionalInformation}\n\n        {plans === undefined ? (\n          <></>\n        ) : (\n          <ListGroup className={isLoading ? \"mb-3\" : undefined}>\n            {plans.map((plan1) => {\n              const status = requirement.getStatus(plan1);\n              const creditsCounts = requirement.getRegisteredCreditCounts(\n                plan1,\n                false\n              );\n              return (\n                <ListGroup.Item\n                  key={`${creditsCounts.acquired}-${creditsCounts.registered}`}\n                  action\n                  onClick={() => onSubmit(plan1)}\n                >\n                  <div className=\"d-flex justify-content-between align-items-center\">\n                    <div>\n                      修得\n                      <> </>\n                      <strong className=\"text-success\">\n                        {creditsCounts.acquired}\n                      </strong>\n                      <> / </>\n                      履修\n                      <> </>\n                      <strong className=\"text-primary\">\n                        {creditsCounts.registered}\n                      </strong>\n                    </div>\n                    <RequirementRegistrationStatusBadge status={status} />\n                  </div>\n                  {[...plan1.selectionNameToOptionName].map(\n                    ([selectionName, optionName]) => (\n                      <div key={selectionName}>\n                        {selectionName}\n                        <> : </>\n                        <strong>{optionName}</strong>\n                      </div>\n                    )\n                  )}\n                </ListGroup.Item>\n              );\n            })}\n          </ListGroup>\n        )}\n        {isLoading ? (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" variant=\"primary\" />\n          </div>\n        ) : (\n          <></>\n        )}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={onCancel}>\n          {cancelButtonLabel}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default AssignmentsFindView;\n\nexport const AssignmentsFindButton: React.FC<{\n  requirement: Requirements;\n  idToRequirement: ReadonlyMap<string, RequirementWithCourses>;\n  codeToCourse: ReadonlyMap<string, Course>;\n  plan: Plan;\n  onSubmit: (plan: Plan) => void;\n}> = ({ requirement, idToRequirement, codeToCourse, plan, onSubmit }) => {\n  const [show, setShow] = useState(false);\n\n  const onCancel = useCallback(() => setShow(false), []);\n  const handleSubmit = useCallback(\n    (nextPlan) => {\n      setShow(false);\n      onSubmit(nextPlan);\n    },\n    [onSubmit]\n  );\n\n  return (\n    <>\n      <Button variant=\"secondary\" onClick={() => setShow(true)}>\n        最適な割り当ての自動探索\n      </Button>\n      <AssignmentsFindView\n        show={show}\n        onCancel={onCancel}\n        requirement={requirement}\n        idToRequirement={idToRequirement}\n        codeToCourse={codeToCourse}\n        plan={plan}\n        selectsAutomatically={false}\n        additionalInformation={\n          <p>\n            先に<b>履修状況の設定</b>と<b>単位数の入力</b>\n            を行っておいてください。\n          </p>\n        }\n        cancelButtonLabel=\"キャンセル\"\n        onSubmit={handleSubmit}\n      />\n    </>\n  );\n};\n","const safely = <F extends (...args: any) => any>(\n  f: F,\n  ...args: Parameters<F>\n): ReturnType<F> | undefined => {\n  try {\n    return f(...args);\n  } catch {\n    return undefined;\n  }\n};\n\nexport default safely;\n","import parse from \"csv-parse/lib/sync\";\nimport { useCallback, useState } from \"react\";\nimport {\n  Badge,\n  Button,\n  ButtonGroup,\n  Form,\n  Modal,\n  OverlayTrigger,\n  Table,\n  Tooltip,\n} from \"react-bootstrap\";\nimport AssignmentsFindView from \"./AssignmentsFindView\";\nimport { CourseRegistrationStatusBadge, DisabledCourseBadge } from \"./badges\";\nimport type Course from \"./Course\";\nimport Plan, { getNextStatus, isRegistrable, RegistrationStatus } from \"./Plan\";\nimport RegistrationStatusLockTarget from \"./RegistrationStatusLockTarget\";\nimport type Requirements from \"./Requirements\";\nimport type { RequirementWithCourses } from \"./Requirements\";\nimport safely from \"./safely\";\n\nconst placeholder = `\n\"学籍番号\",\"学生氏名\",\"科目番号\",\"科目名 \",\"単位数\",\"春学期\",\"秋学期\",\"総合評価\",\"科目区分\",\"開講年度\",\"開講区分\"\n\"201700000\",\"＊＊ ＊＊\",\"GB10615\",\"コンピュータリテラシ\",\" 2.0\",\"-\",\"-\",\"A\",\"A\",\"2017\",\"通常\"\n\"201700000\",\"＊＊ ＊＊\",\"GB10664\",\"プログラミング入門A\",\" 1.0\",\"-\",\"-\",\"A\",\"A\",\"2017\",\"通常\"\n`.trim();\n\ntype RegistrationStatus12 =\n  | RegistrationStatus.Registered\n  | RegistrationStatus.Acquired;\n\nconst Table1: React.FC<{\n  codeColumnIndex: number;\n  titleColumnIndex: number | undefined;\n  creditsCountColumnIndex: number | undefined;\n  courseAndRecordPairs: readonly [\n    CourseAndRecordPair,\n    ...CourseAndRecordPair[]\n  ];\n  courseToStatus: ReadonlyMap<Course, RegistrationStatus>;\n  setCourseToStatus: (\n    courseToStatus: ReadonlyMap<Course, RegistrationStatus>\n  ) => void;\n}> = ({\n  codeColumnIndex,\n  titleColumnIndex,\n  creditsCountColumnIndex,\n  courseAndRecordPairs,\n  courseToStatus,\n  setCourseToStatus,\n}) => {\n  const { course: firstCourse, record: firstRecord } = courseAndRecordPairs[0];\n\n  const firstRecordIsHeader =\n    firstCourse === undefined &&\n    firstRecord[codeColumnIndex]!.trim() === \"科目番号\" &&\n    (titleColumnIndex === undefined ||\n      firstRecord[titleColumnIndex]!.trim() === \"科目名\") &&\n    (creditsCountColumnIndex === undefined ||\n      firstRecord[creditsCountColumnIndex]!.trim() === \"単位数\");\n\n  const courseAndRecordPairsWithoutHeader: readonly CourseAndRecordPair[] = firstRecordIsHeader\n    ? courseAndRecordPairs.slice(1)\n    : courseAndRecordPairs;\n\n  return (\n    <Table bordered hover responsive style={{ whiteSpace: \"nowrap\" }}>\n      <thead>\n        <tr>\n          <th></th>\n          <th>科目番号</th>\n          <th>科目名</th>\n          <th>単位数</th>\n          {firstRecord\n            .map((cell, index) => (\n              <th key={index}>{firstRecordIsHeader ? cell : <></>}</th>\n            ))\n            .filter(\n              (_, index) =>\n                index !== codeColumnIndex &&\n                index !== titleColumnIndex &&\n                index !== creditsCountColumnIndex\n            )}\n        </tr>\n      </thead>\n      <tbody>\n        {courseAndRecordPairsWithoutHeader.map(\n          ({ course, record }, recordIndex) => {\n            const getTdContent = <T,>(\n              index: number | undefined,\n              mapCourse: (course: Course) => T,\n              mapRecord: (recordValue: string) => T\n            ) => {\n              const recordValue =\n                index === undefined ? undefined : record[index];\n              return course === undefined ? (\n                recordValue\n              ) : recordValue === undefined ||\n                mapRecord(recordValue) === mapCourse(course) ? (\n                mapCourse(course)\n              ) : (\n                <>\n                  <div>\n                    <del>{recordValue}</del>\n                  </div>\n                  <div>\n                    <ins>{mapCourse(course)}</ins>\n                  </div>\n                </>\n              );\n            };\n\n            const tds0 = (\n              <>\n                <td>\n                  <code>{record[codeColumnIndex]}</code>\n                </td>\n                <td>\n                  {getTdContent(\n                    titleColumnIndex,\n                    (course) => course.title,\n                    (recordTitle) => recordTitle.trim()\n                  )}\n                </td>\n                <td style={{ textAlign: \"center\" }}>\n                  {getTdContent(\n                    creditsCountColumnIndex,\n                    (course) => course.creditCount,\n                    (recordCreditsCount) => +recordCreditsCount\n                  )}\n                </td>\n              </>\n            );\n            const tds1 = record\n              .map((cell, index) => (\n                <td key={index}>\n                  {index === codeColumnIndex ? (\n                    <code>{cell}</code>\n                  ) : index === titleColumnIndex ? (\n                    cell\n                  ) : (\n                    <span className=\"text-muted\">{cell}</span>\n                  )}\n                </td>\n              ))\n              .filter(\n                (_, index) =>\n                  index !== codeColumnIndex &&\n                  index !== titleColumnIndex &&\n                  index !== creditsCountColumnIndex\n              );\n\n            const tds = (\n              <>\n                {tds0}\n                {tds1}\n              </>\n            );\n\n            if (course === undefined) {\n              return (\n                <tr key={recordIndex} className=\"table-secondary\">\n                  <td style={{ textAlign: \"center\" }}>\n                    <OverlayTrigger\n                      overlay={\n                        <Tooltip id={`record${recordIndex}-tooltip`}>\n                          この科目は定義されていないため、このツールでは利用できません。\n                        </Tooltip>\n                      }\n                    >\n                      <Badge variant=\"secondary\">未定義</Badge>\n                    </OverlayTrigger>\n                  </td>\n                  {tds}\n                </tr>\n              );\n            } else if (isRegistrable({ course, courseToStatus })) {\n              const status =\n                courseToStatus.get(course) ?? RegistrationStatus.Unregistered;\n              const nextStatus = getNextStatus({\n                currentStatus: status,\n                lockTarget: RegistrationStatusLockTarget.None,\n              });\n\n              return (\n                <tr\n                  key={recordIndex}\n                  onClick={() =>\n                    setCourseToStatus(\n                      new Map([...courseToStatus, [course, nextStatus]])\n                    )\n                  }\n                  style={{ cursor: \"pointer\" }}\n                  className={\n                    status === RegistrationStatus.Unregistered\n                      ? undefined\n                      : `table-${\n                          status === RegistrationStatus.Acquired\n                            ? \"success\"\n                            : \"primary\"\n                        }`\n                  }\n                >\n                  <td style={{ textAlign: \"center\" }}>\n                    <CourseRegistrationStatusBadge status={status} />\n                  </td>\n                  {tds}\n                </tr>\n              );\n            } else {\n              return (\n                <tr key={recordIndex}>\n                  <td style={{ textAlign: \"center\" }}>\n                    <DisabledCourseBadge id={`record${recordIndex}-tooltip`} />\n                  </td>\n                  {tds}\n                </tr>\n              );\n            }\n          }\n        )}\n      </tbody>\n    </Table>\n  );\n};\n\ninterface CourseAndRecordPair {\n  readonly course: Course | undefined;\n  readonly record: readonly string[];\n}\n\nconst getColumnIndex = <T,>(\n  courseAndRecordPairs: readonly [\n    CourseAndRecordPair,\n    ...CourseAndRecordPair[]\n  ],\n  mapCourse: (course: Course) => T,\n  mapRecord: (recordValue: string) => T\n) =>\n  courseAndRecordPairs[0].record.reduce<{\n    count: number;\n    index: number | undefined;\n  }>(\n    (previous, _, index) => {\n      const count = courseAndRecordPairs.filter(({ course, record }) => {\n        const recordValue = record[index]!;\n        return (\n          course !== undefined && mapRecord(recordValue) === mapCourse(course)\n        );\n      }).length;\n      return count > previous.count ? { count, index } : previous;\n    },\n    {\n      count: 0,\n      index: undefined,\n    }\n  ).index;\n\nconst Modal1: React.FC<{\n  codeColumnIndex: number;\n  courseAndRecordPairs: readonly [\n    CourseAndRecordPair,\n    ...CourseAndRecordPair[]\n  ];\n  show: boolean;\n  courseToStatus: ReadonlyMap<Course, RegistrationStatus>;\n  setCourseToStatus: (\n    courseToStatus: ReadonlyMap<Course, RegistrationStatus>\n  ) => void;\n  onCancel: () => void;\n  onSubmit: () => void;\n}> = ({\n  codeColumnIndex,\n  courseAndRecordPairs,\n  show,\n  courseToStatus,\n  setCourseToStatus,\n  onCancel,\n  onSubmit,\n}) => {\n  const titleColumnIndex = getColumnIndex(\n    courseAndRecordPairs,\n    (course) => course.title,\n    (recordTitle) => recordTitle.trim()\n  );\n  const creditsCountColumnIndex = getColumnIndex(\n    courseAndRecordPairs,\n    (course) => course.creditCount,\n    (recordCreditsCount) => +recordCreditsCount\n  );\n\n  const setAllCourseStatus = useCallback(\n    (status: RegistrationStatus12) => {\n      const nextCourseToStatus = new Map();\n      for (const { course } of courseAndRecordPairs) {\n        if (\n          course !== undefined &&\n          isRegistrable({ course, courseToStatus: nextCourseToStatus })\n        ) {\n          nextCourseToStatus.set(course, status);\n        }\n      }\n      setCourseToStatus(nextCourseToStatus);\n    },\n    [courseAndRecordPairs, setCourseToStatus]\n  );\n  const setAllCourseStatusToRegistered = useCallback(\n    () => setAllCourseStatus(RegistrationStatus.Registered),\n    [setAllCourseStatus]\n  );\n  const setAllCourseStatusToAcquired = useCallback(\n    () => setAllCourseStatus(RegistrationStatus.Acquired),\n    [setAllCourseStatus]\n  );\n\n  return (\n    <Modal size=\"xl\" show={show} onHide={onCancel}>\n      <Modal.Header closeButton>\n        <Modal.Title>CSVから履修状況を一括登録</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>CSVデータから見つかった科目が以下に表示されています。</p>\n        <p>\n          それぞれの科目を [履修する] / [修得済み]\n          のどちらかに設定してください。\n          CSVデータに不要な科目が含まれている場合は、 [履修しない]\n          に設定してください。\n        </p>\n        <p>\n          [OK]\n          を押すと、設定された履修状況のもとで、最適な科目群への割り当てがないか探します。\n          割り当てが見つかればそれが適用され、見つからない場合は履修状況の設定だけが行われます。\n          <strong>現在の履修 / 修得状況は失われます。</strong>\n        </p>\n        <ButtonGroup className=\"mb-3\">\n          <Button\n            variant=\"outline-primary\"\n            onClick={setAllCourseStatusToRegistered}\n          >\n            すべて履修する\n          </Button>\n          <Button\n            variant=\"outline-success\"\n            onClick={setAllCourseStatusToAcquired}\n          >\n            すべて修得済み\n          </Button>\n        </ButtonGroup>\n        <Table1\n          codeColumnIndex={codeColumnIndex}\n          titleColumnIndex={titleColumnIndex}\n          creditsCountColumnIndex={creditsCountColumnIndex}\n          courseAndRecordPairs={courseAndRecordPairs}\n          courseToStatus={courseToStatus}\n          setCourseToStatus={setCourseToStatus}\n        />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={onCancel}>\n          戻る\n        </Button>\n        <Button onClick={onSubmit}>OK</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nconst Modal0: React.FC<{\n  codeToCourse: ReadonlyMap<string, Course>;\n  show: boolean;\n  onCancel: () => void;\n  onSubmit: ({\n    courseAndRecordPairs,\n    codeColumnIndex,\n  }: {\n    courseAndRecordPairs: readonly [\n      CourseAndRecordPair,\n      ...CourseAndRecordPair[]\n    ];\n    codeColumnIndex: number;\n  }) => void;\n}> = ({ codeToCourse, show, onCancel: onHide, onSubmit }) => {\n  const [csv, setCSV] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n\n  const records: readonly (readonly string[])[] | undefined = safely(\n    parse,\n    csv\n  );\n  const { courseAndRecordPairs, codeColumnIndex } = records?.[0]?.reduce<{\n    definedCoursesCount: number;\n    courseAndRecordPairs:\n      | readonly [CourseAndRecordPair, ...CourseAndRecordPair[]]\n      | undefined;\n    codeColumnIndex: number | undefined;\n  }>(\n    (previous, _, index) => {\n      const courseAndRecordPairs = records.map((record) => {\n        const code = record[index]!;\n        const course = codeToCourse.get(code.trim());\n        return { record, course };\n      }) as [CourseAndRecordPair, ...CourseAndRecordPair[]];\n      const definedCoursesCount = courseAndRecordPairs.filter(\n        ({ course }) => course !== undefined\n      ).length;\n\n      return definedCoursesCount > previous.definedCoursesCount\n        ? {\n            definedCoursesCount,\n            courseAndRecordPairs,\n            codeColumnIndex: index,\n          }\n        : previous;\n    },\n    {\n      definedCoursesCount: 0,\n      courseAndRecordPairs: undefined,\n      codeColumnIndex: undefined,\n    }\n  ) ?? {\n    courseAndRecordPairs: undefined,\n    codeColumnIndex: undefined,\n  };\n\n  const feedback =\n    records === undefined\n      ? \"CSVの形式が不正です\"\n      : records.length === 0\n      ? \"CSVを入力してください\"\n      : codeColumnIndex === undefined\n      ? \"科目がひとつも見つかりません\"\n      : undefined;\n\n  const handleCSVChange = useCallback((nextCSV: string) => {\n    setCSV(nextCSV);\n    setValidated(true);\n  }, []);\n\n  const handleFileChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const file = event.target.files?.item(0);\n      if (file === null || file === undefined) {\n        return;\n      }\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () => {\n        if (typeof reader.result === \"string\") {\n          handleCSVChange(reader.result);\n        }\n      });\n      reader.readAsText(file);\n    },\n    [handleCSVChange]\n  );\n\n  return (\n    <Modal size=\"lg\" show={show} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>CSVから履修状況を一括登録</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>\n          ひとつの列に科目番号が記述されたCSVデータを用意してください。\n          次のようなCSVデータを使用できます。\n        </p>\n        <ul>\n          <li>TWINS の [成績照会] 画面からダウンロードしたCSVファイル</li>\n          <li>各行に科目番号のみを記述したデータ</li>\n        </ul>\n        <p>\n          用意したデータをテキストボックスに貼り付けるか、ファイルとして読み込んでください。\n        </p>\n\n        <Form.Group>\n          <Form.Label>CSV / 科目番号のリスト</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={5}\n            placeholder={placeholder}\n            value={csv}\n            className=\"text-monospace\"\n            onChange={(event: React.ChangeEvent<HTMLTextAreaElement>) =>\n              handleCSVChange(event.target.value)\n            }\n            style={{ whiteSpace: \"pre\" }}\n            isInvalid={validated && feedback !== undefined}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {feedback}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button as=\"label\" variant=\"secondary\" className=\"mb-0\">\n          CSVファイルを読み込む\n          <input\n            type=\"file\"\n            className=\"d-none\"\n            accept=\".csv,text/csv,text/plain\"\n            id=\"csv-file-input\"\n            onChange={handleFileChange}\n          />\n        </Button>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={onHide}>\n          キャンセル\n        </Button>\n        {courseAndRecordPairs === undefined || codeColumnIndex === undefined ? (\n          <Button disabled>次へ</Button>\n        ) : (\n          <Button\n            onClick={() => onSubmit({ courseAndRecordPairs, codeColumnIndex })}\n          >\n            次へ\n          </Button>\n        )}\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nconst CollectivelyCourseSetView: React.FC<{\n  codeToCourse: ReadonlyMap<string, Course>;\n  requirement: Requirements;\n  idToRequirement: ReadonlyMap<string, RequirementWithCourses>;\n  plan: Plan;\n  onSubmit: (plan: Plan) => void;\n}> = ({ codeToCourse, requirement, idToRequirement, plan, onSubmit }) => {\n  const [page, setPage] = useState<0 | 1 | 2 | undefined>();\n  const [courseAndRecordPairs, setCourseAndRecordPairs] = useState<\n    readonly [CourseAndRecordPair, ...CourseAndRecordPair[]]\n  >();\n  const [codeColumnIndex, setCodeColumnIndex] = useState<number>();\n  const [courseToStatus, setCourseToStatus] = useState<\n    ReadonlyMap<Course, RegistrationStatus>\n  >(new Map());\n\n  return (\n    <>\n      <Button variant=\"secondary\" onClick={() => setPage(0)}>\n        CSVから履修状況を一括登録\n      </Button>\n      <Modal0\n        codeToCourse={codeToCourse}\n        show={page === 0}\n        onCancel={() => setPage(undefined)}\n        onSubmit={({ courseAndRecordPairs, codeColumnIndex }) => {\n          const nextCourseToStatus = new Map(courseToStatus);\n          for (const { course } of courseAndRecordPairs) {\n            if (\n              course !== undefined &&\n              !nextCourseToStatus.has(course) &&\n              isRegistrable({ course, courseToStatus: nextCourseToStatus })\n            ) {\n              nextCourseToStatus.set(course, RegistrationStatus.Registered);\n            }\n          }\n          setCourseToStatus(nextCourseToStatus);\n          setCourseAndRecordPairs(courseAndRecordPairs);\n          setCodeColumnIndex(codeColumnIndex);\n          setPage(1);\n        }}\n      />\n      {courseAndRecordPairs === undefined || codeColumnIndex === undefined ? (\n        <></>\n      ) : (\n        <Modal1\n          courseAndRecordPairs={courseAndRecordPairs}\n          codeColumnIndex={codeColumnIndex}\n          show={page === 1}\n          courseToStatus={courseToStatus}\n          setCourseToStatus={setCourseToStatus}\n          onCancel={() => setPage(0)}\n          onSubmit={() => setPage(2)}\n        />\n      )}\n      {courseToStatus === undefined ? (\n        <></>\n      ) : (\n        <AssignmentsFindView\n          show={page === 2}\n          requirement={requirement}\n          idToRequirement={idToRequirement}\n          codeToCourse={codeToCourse}\n          plan={{ ...plan, courseToStatus }}\n          selectsAutomatically={true}\n          cancelButtonLabel=\"スキップ\"\n          additionalInformation={\n            <p>\n              スキップすると科目群への割り当てを行わず、履修状況の設定だけを行います。\n            </p>\n          }\n          onCancel={() => {\n            setPage(undefined);\n            onSubmit({ ...plan, courseToStatus });\n          }}\n          onSubmit={(plan) => {\n            setPage(undefined);\n            onSubmit(plan);\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default CollectivelyCourseSetView;\n","import type Course from \"../Course\";\nimport courses from \"./courses1.json\";\n\nconst codeToCourse = new Map<string, Course>();\n\nfor (const course of courses) {\n  codeToCourse.set(course.code, course);\n}\n\nexport default codeToCourse;\n","enum FilterType {\n  None,\n  Registered,\n  Valid,\n}\n\nexport default FilterType;\n","import { useEffect, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport Plan, { toJSON } from \"./Plan\";\n\nconst ExportView: React.FC<{ plan: Plan }> = ({ plan }) => {\n  const jsonText = JSON.stringify(toJSON(plan));\n  const [url, setURL] = useState<string | undefined>();\n  useEffect(() => {\n    const blob = new Blob([jsonText], { type: \"application/json\" });\n    const reader = new FileReader();\n    const onLoad = () => {\n      const url = reader.result;\n      if (typeof url === \"string\") {\n        setURL(url);\n      }\n    };\n    reader.addEventListener(\"load\", onLoad);\n    reader.readAsDataURL(blob);\n    return () => reader.removeEventListener(\"load\", onLoad);\n  }, [jsonText]);\n\n  return (\n    <>\n      <h5>バックアップの保存</h5>\n      <p>\n        作業内容のバックアップを保存するには、次のJSONデータを保存してください。\n      </p>\n      <Form.Group>\n        <Form.Label>JSON</Form.Label>\n        <Form.Control\n          readOnly\n          className=\"input-monospace\"\n          value={jsonText}\n          onFocus={(e: React.FocusEvent<HTMLInputElement>) => e.target.select()}\n        />\n      </Form.Group>\n      <Button as=\"a\" href={url} download>\n        JSONファイルとして保存\n      </Button>\n    </>\n  );\n};\n\nexport default ExportView;\n","import { useState } from \"react\";\n\nconst getValueFromModal = async <T, P>(\n  ModalType: React.ComponentType<\n    {\n      onReturn: (value: T) => void;\n      onExited: () => void;\n    } & P\n  >,\n  props: P,\n  setModalsAndCount: React.Dispatch<React.SetStateAction<ModalsAndCount>>\n): Promise<T> =>\n  new Promise((resolve, reject) => {\n    try {\n      setModalsAndCount(({ modals, count }) => {\n        const modal = (\n          <ModalType\n            {...props}\n            onReturn={(value) => resolve(value)}\n            onExited={() =>\n              setModalsAndCount(({ modals, count }) => ({\n                modals: modals.filter((value) => value !== modal),\n                count,\n              }))\n            }\n            key={count}\n          />\n        );\n        return {\n          modals: [...modals, modal],\n          count: count + 1,\n        };\n      });\n    } catch (e) {\n      reject(e);\n    }\n  });\n\nexport interface ModalsAndCount {\n  readonly modals: readonly JSX.Element[];\n  readonly count: number;\n}\n\nconst initialModalsAndCount: ModalsAndCount = {\n  modals: [],\n  count: 0,\n};\n\nexport const useModals = () => {\n  const [modalsAndCount, setModalsAndCount] = useState(initialModalsAndCount);\n  return {\n    modals: modalsAndCount.modals,\n    setModalsAndCount,\n  };\n};\n\nexport default getValueFromModal;\n","import { useCallback, useState } from \"react\";\nimport { Button, ButtonToolbar, Form, Modal } from \"react-bootstrap\";\nimport type Course from \"./Course\";\nimport getValueFromModal, { useModals } from \"./getValueFromModal\";\nimport Plan, { emptyPlan, fromJSON, toJSON } from \"./Plan\";\nimport type { RequirementWithCourses } from \"./Requirements\";\nimport safely from \"./safely\";\n\nconst ImportConfirmationModal: React.FC<{\n  onReturn: (value: boolean) => void;\n  onExited: () => void;\n}> = ({ onReturn, onExited }) => {\n  const [show, setShow] = useState(true);\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        onReturn(false);\n      }}\n      onExited={onExited}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>バックアップの復元</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        復元すると現在の作業内容は失われますが、よろしいですか？\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          variant=\"secondary\"\n          onClick={() => {\n            setShow(false);\n            onReturn(false);\n          }}\n        >\n          いいえ\n        </Button>\n        <Button\n          variant=\"danger\"\n          onClick={() => {\n            setShow(false);\n            onReturn(true);\n          }}\n        >\n          はい\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nconst ImportView: React.FC<{\n  codeToCourse: ReadonlyMap<string, Course>;\n  idToRequirement: ReadonlyMap<string, RequirementWithCourses>;\n  onSubmit: (nextPlan: Plan) => void;\n}> = ({ codeToCourse, idToRequirement, onSubmit }) => {\n  const [jsonText, setJSONText] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n  const { modals, setModalsAndCount } = useModals();\n\n  const json = safely(JSON.parse, jsonText);\n  const nextPlan =\n    json && safely(fromJSON, json, { codeToCourse, idToRequirement });\n  const isInvalid = nextPlan === undefined;\n\n  const handleJSONChange = useCallback((nextJSON: string) => {\n    setJSONText(nextJSON);\n    setValidated(true);\n  }, []);\n\n  const handleFileChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const file = event.target.files?.item(0);\n      if (file === null || file === undefined) {\n        return;\n      }\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () => {\n        if (typeof reader.result === \"string\") {\n          handleJSONChange(reader.result);\n        }\n      });\n      reader.readAsText(file);\n    },\n    [handleJSONChange]\n  );\n\n  const handleSubmit = useCallback(\n    async (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      if (\n        nextPlan === undefined ||\n        !(await getValueFromModal(\n          ImportConfirmationModal,\n          {},\n          setModalsAndCount\n        ))\n      ) {\n        return;\n      }\n      onSubmit(nextPlan);\n    },\n    [nextPlan, onSubmit, setModalsAndCount]\n  );\n\n  return (\n    <>\n      {modals}\n      <h5>バックアップの復元</h5>\n      <p>\n        保存したJSONデータをテキストボックスに貼り付けるか、ファイルとして読み込んでください。\n        [復元] ボタンを押すと、<strong>現在の作業内容は失われ</strong>\n        、入力されたバックアップが復元されます。\n      </p>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group>\n          <Form.Label>JSON</Form.Label>\n          <Form.Control\n            className=\"input-monospace\"\n            isInvalid={validated && isInvalid}\n            value={jsonText}\n            placeholder={JSON.stringify(toJSON(emptyPlan))}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              handleJSONChange(event.target.value)\n            }\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            JSONの形式が不正です\n          </Form.Control.Feedback>\n        </Form.Group>\n        <ButtonToolbar>\n          <Button type=\"submit\" disabled={isInvalid}>\n            復元\n          </Button>\n          <Button as=\"label\" variant=\"secondary\" className=\"mb-0\">\n            JSONファイルを読み込む\n            <input\n              type=\"file\"\n              className=\"d-none\"\n              accept=\".json,application/json\"\n              id=\"json-file-input\"\n              onChange={handleFileChange}\n            />\n          </Button>\n        </ButtonToolbar>\n      </Form>\n    </>\n  );\n};\n\nexport default ImportView;\n","import type Course from \"../Course\";\nimport Plan, { RegisteredCreditCounts, RegistrationStatus } from \"../Plan\";\nimport type {\n  RequirementWithChildrenJSON,\n  RequirementWithCoursesJSON,\n  SelectionRequirementJSON,\n} from \"./RequirementsJSON\";\n\ntype Requirements =\n  | RequirementWithChildren\n  | RequirementWithCourses\n  | SelectionRequirement;\nexport default Requirements;\n\nabstract class Requirement {\n  readonly id: string;\n  readonly name: string;\n  abstract getRegisteredCreditCounts(\n    plan: Plan,\n    includesExcess: boolean\n  ): RegisteredCreditCounts;\n  abstract getRequiredCreditCount(\n    selectionNameToOptionName: ReadonlyMap<string, string>\n  ): Range;\n  abstract getVisibleRequirements(\n    selectionNameToOptionName: ReadonlyMap<string, string>\n  ): readonly RequirementWithCourses[];\n  constructor({ id, name }: { id: string; name: string }) {\n    this.id = id;\n    this.name = name;\n  }\n  getStatus(plan: Plan): RegistrationStatus {\n    const requiredCreditCount = this.getRequiredCreditCount(\n      plan.selectionNameToOptionName\n    );\n    const registeredCreditCounts = this.getRegisteredCreditCounts(plan, false);\n    return registeredCreditCounts.acquired >= requiredCreditCount.min\n      ? RegistrationStatus.Acquired\n      : registeredCreditCounts.registered >= requiredCreditCount.min\n      ? RegistrationStatus.Registered\n      : RegistrationStatus.Unregistered;\n  }\n}\n\nexport interface Range {\n  min: number;\n  max: number;\n}\n\nexport interface RequirementWithChildrenInit {\n  readonly id: string;\n  readonly name: string;\n  readonly description?: string;\n  readonly children: Iterable<Requirements>;\n  readonly creditCount?: Range;\n}\n\nexport class RequirementWithChildren\n  extends Requirement\n  implements RequirementWithChildrenInit {\n  readonly description?: string;\n  readonly children: readonly Requirements[];\n  readonly creditCount?: Range;\n  constructor({\n    id,\n    name,\n    description,\n    children,\n    creditCount,\n  }: RequirementWithChildrenInit) {\n    super({ id, name });\n    this.description = description;\n    this.children = [...children];\n    this.creditCount = creditCount;\n  }\n  getRegisteredCreditCounts(\n    plan: Plan,\n    includesExcess: boolean\n  ): RegisteredCreditCounts {\n    const creditCounts = this.children.reduce(\n      (previous, child) => {\n        const childRegisteredCreditCount = child.getRegisteredCreditCounts(\n          plan,\n          includesExcess\n        );\n        return {\n          acquired: previous.acquired + childRegisteredCreditCount.acquired,\n          registered:\n            previous.registered + childRegisteredCreditCount.registered,\n        };\n      },\n      { acquired: 0, registered: 0 }\n    );\n    return includesExcess || this.creditCount === undefined\n      ? creditCounts\n      : {\n          acquired: Math.min(this.creditCount.max, creditCounts.acquired),\n          registered: Math.min(this.creditCount.max, creditCounts.registered),\n        };\n  }\n  getRequiredCreditCount(\n    selectionNameToOptionName: ReadonlyMap<string, string>\n  ): Range {\n    return this.creditCount === undefined\n      ? this.children.reduce(\n          (previous, child) => {\n            const childRequiredCreditCount = child.getRequiredCreditCount(\n              selectionNameToOptionName\n            );\n            return {\n              min: previous.min + childRequiredCreditCount.min,\n              max: previous.max + childRequiredCreditCount.max,\n            };\n          },\n          { min: 0, max: 0 }\n        )\n      : this.creditCount;\n  }\n  getStatus(plan: Plan): RegistrationStatus {\n    return Math.min(\n      super.getStatus(plan),\n      ...this.children.map((child) => child.getStatus(plan))\n    );\n  }\n  getVisibleRequirements(\n    selectionNameToOptionName: ReadonlyMap<string, string>\n  ): readonly RequirementWithCourses[] {\n    return this.children.flatMap((requirement) =>\n      requirement.getVisibleRequirements(selectionNameToOptionName)\n    );\n  }\n  toJSON(): RequirementWithChildrenJSON {\n    return {\n      name: this.name,\n      description: this.description,\n      children: this.children.map((child) => child.toJSON()),\n      creditCount: this.creditCount,\n    };\n  }\n}\n\nexport interface RequirementWithCoursesInit {\n  readonly id: string;\n  readonly name: string;\n  readonly description?: string;\n  readonly courses: Iterable<Course>;\n  readonly creditCount: Range;\n  readonly allowsOthers?: boolean;\n}\n\nexport class RequirementWithCourses extends Requirement {\n  readonly description?: string;\n  readonly courses: readonly Course[];\n  readonly creditCount: Range;\n  readonly allowsOthers: boolean;\n  constructor({\n    id,\n    name,\n    description,\n    courses,\n    creditCount,\n    allowsOthers = false,\n  }: RequirementWithCoursesInit) {\n    super({ id, name });\n    this.description = description;\n    this.courses = [...courses];\n    this.creditCount = creditCount;\n    this.allowsOthers = allowsOthers;\n  }\n  getRegisteredCreditCounts(\n    plan: Plan,\n    includesExcess: boolean\n  ): RegisteredCreditCounts {\n    const othersCount = plan.requirementToOthersCount.get(this) || {\n      acquired: 0,\n      registered: 0,\n    };\n    const creditCounts = this.courses.reduce(\n      (previous, course): RegisteredCreditCounts => {\n        const courseStatus =\n          plan.courseToStatus.get(course) || RegistrationStatus.Unregistered;\n        if (plan.courseToRequirement.get(course) === this) {\n          return courseStatus === RegistrationStatus.Acquired\n            ? {\n                acquired: previous.acquired + course.creditCount,\n                registered: previous.registered + course.creditCount,\n              }\n            : courseStatus === RegistrationStatus.Registered\n            ? {\n                acquired: previous.acquired,\n                registered: previous.registered + course.creditCount,\n              }\n            : previous;\n        } else {\n          return previous;\n        }\n      },\n      othersCount\n    );\n    return includesExcess || this.creditCount === undefined\n      ? creditCounts\n      : {\n          acquired: Math.min(this.creditCount.max, creditCounts.acquired),\n          registered: Math.min(this.creditCount.max, creditCounts.registered),\n        };\n  }\n  getRequiredCreditCount() {\n    return this.creditCount;\n  }\n  getVisibleRequirements() {\n    return [this] as const;\n  }\n  toJSON(): RequirementWithCoursesJSON {\n    return {\n      name: this.name,\n      description: this.description,\n      courses: this.courses.map((course) => course.code),\n      creditCount: this.creditCount,\n      allowsOthers: this.allowsOthers,\n    };\n  }\n}\n\ninterface Option {\n  name: string;\n  requirement: Requirements;\n}\n\nexport interface SelectionRequirementInit {\n  readonly id: string;\n  readonly name: string;\n  readonly options: Iterable<Option>;\n}\n\nexport class SelectionRequirement\n  extends Requirement\n  implements SelectionRequirementInit {\n  readonly name: string;\n  readonly options: readonly Option[];\n  readonly optionNameToRequirement: ReadonlyMap<string, Requirements>;\n  constructor({ id, name, options: options0 }: SelectionRequirementInit) {\n    super({ id, name });\n    this.name = name;\n    const options = [...options0];\n    this.options = options;\n    this.optionNameToRequirement = new Map(\n      options.map(({ name, requirement }) => [name, requirement])\n    );\n  }\n  getSelectedOptionName(\n    selectionNameToOptionName: ReadonlyMap<string, string>\n  ) {\n    const selectedOptionName =\n      selectionNameToOptionName.get(this.name) ?? this.options[0]!.name;\n    return selectedOptionName;\n  }\n  getSelectedRequirement(\n    selectionNameToOptionName: ReadonlyMap<string, string>\n  ) {\n    const selectedOptionName = this.getSelectedOptionName(\n      selectionNameToOptionName\n    );\n    const selectedRequirement = this.optionNameToRequirement.get(\n      selectedOptionName\n    );\n    return selectedRequirement;\n  }\n  getRegisteredCreditCounts(\n    plan: Plan,\n    includesExcess: boolean\n  ): RegisteredCreditCounts {\n    const selectedRequirement = this.getSelectedRequirement(\n      plan.selectionNameToOptionName\n    );\n    if (selectedRequirement === undefined) {\n      return { acquired: 0, registered: 0 };\n    } else {\n      return selectedRequirement.getRegisteredCreditCounts(\n        plan,\n        includesExcess\n      );\n    }\n  }\n  getRequiredCreditCount(\n    selectionNameToOptionName: ReadonlyMap<string, string>\n  ): Range {\n    const selectedRequirement = this.getSelectedRequirement(\n      selectionNameToOptionName\n    );\n    if (selectedRequirement === undefined) {\n      return { min: 0, max: 0 };\n    } else {\n      return selectedRequirement.getRequiredCreditCount(\n        selectionNameToOptionName\n      );\n    }\n  }\n  getVisibleRequirements(\n    selectionNameToOptionName: ReadonlyMap<string, string>\n  ): readonly RequirementWithCourses[] {\n    const selectedRequirement = this.getSelectedRequirement(\n      selectionNameToOptionName\n    );\n    if (selectedRequirement === undefined) {\n      return [];\n    } else {\n      return selectedRequirement.getVisibleRequirements(\n        selectionNameToOptionName\n      );\n    }\n  }\n  toJSON(): SelectionRequirementJSON {\n    return {\n      name: this.name,\n      options: this.options.map(({ name, requirement }) => ({\n        name,\n        requirement: requirement.toJSON(),\n      })),\n    };\n  }\n}\n","import type Course from \"../Course\";\nimport Requirements, {\n  Range,\n  RequirementWithChildren,\n  RequirementWithCourses,\n  SelectionRequirement,\n} from \"./Requirements\";\nimport type RequirementsJSON from \"./RequirementsJSON\";\n\ninterface RequirementAndDictionary {\n  readonly requirement: Requirements;\n  readonly idToRequirement: ReadonlyMap<string, RequirementWithCourses>;\n}\n\nconst numberOrRangeToRange = (numberOrRange: number | Range): Range =>\n  typeof numberOrRange === \"number\"\n    ? {\n        min: numberOrRange,\n        max: numberOrRange,\n      }\n    : numberOrRange;\n\nconst getInnerRequirementAndDictionaryFromJSON = (\n  json: RequirementsJSON,\n  codeToCourse: ReadonlyMap<string, Course>,\n  requirementNameToCount: Map<string, number>\n): RequirementAndDictionary => {\n  const count = requirementNameToCount.get(json.name) ?? 0;\n  requirementNameToCount.set(json.name, count + 1);\n  const id = `${json.name}_${count}`;\n  if (\"courses\" in json) {\n    const requirement = new RequirementWithCourses({\n      id,\n      name: json.name,\n      description: json.description,\n      creditCount: numberOrRangeToRange(json.creditCount),\n      courses: json.courses.map((courseCode) => {\n        const course = codeToCourse.get(courseCode);\n        if (course === undefined) {\n          throw new Error(`科目番号 ${courseCode} は定義されていません。`);\n        }\n        return course;\n      }),\n      allowsOthers: json.allowsOthers,\n    });\n    return {\n      requirement,\n      idToRequirement: new Map([[requirement.id, requirement]]),\n    };\n  } else if (\"children\" in json) {\n    const requirementAndDictionaryPairs = json.children.map((child) =>\n      getInnerRequirementAndDictionaryFromJSON(\n        child,\n        codeToCourse,\n        requirementNameToCount\n      )\n    );\n    const requirement = new RequirementWithChildren({\n      id,\n      name: json.name,\n      description: json.description,\n      children: requirementAndDictionaryPairs.map(\n        ({ requirement }) => requirement\n      ),\n      creditCount:\n        json.creditCount === undefined\n          ? undefined\n          : numberOrRangeToRange(json.creditCount),\n    });\n    return {\n      requirement,\n      idToRequirement: new Map(\n        requirementAndDictionaryPairs.flatMap(({ idToRequirement }) => [\n          ...idToRequirement.entries(),\n        ])\n      ),\n    };\n  } else {\n    const optionAndDictionaryArray = json.options.map((optionJSON) => {\n      if (\"requirement\" in optionJSON) {\n        const {\n          requirement,\n          idToRequirement,\n        } = getInnerRequirementAndDictionaryFromJSON(\n          optionJSON.requirement,\n          codeToCourse,\n          requirementNameToCount\n        );\n        return {\n          option: { requirement, name: optionJSON.name },\n          idToRequirement,\n        };\n      } else {\n        const {\n          requirement,\n          idToRequirement,\n        } = getInnerRequirementAndDictionaryFromJSON(\n          optionJSON,\n          codeToCourse,\n          requirementNameToCount\n        );\n        return {\n          option: { requirement, name: requirement.name },\n          idToRequirement,\n        };\n      }\n    });\n    const requirement = new SelectionRequirement({\n      id,\n      name: json.name,\n      options: optionAndDictionaryArray.map(({ option }) => option),\n    });\n    return {\n      requirement,\n      idToRequirement: new Map(\n        optionAndDictionaryArray.flatMap(({ idToRequirement }) => [\n          ...idToRequirement.entries(),\n        ])\n      ),\n    };\n  }\n};\n\nconst getRequirementAndDictionaryFromJSON = (\n  json: RequirementsJSON,\n  codeToCourse: ReadonlyMap<string, Course>\n) => getInnerRequirementAndDictionaryFromJSON(json, codeToCourse, new Map());\n\nexport default getRequirementAndDictionaryFromJSON;\n","import codeToCourse from \"../courses\";\nimport { getRequirementAndDictionaryFromJSON } from \"../Requirements\";\nimport coins17_0 from \"./coins17.json\";\nimport klis17_0 from \"./klis17.json\";\nimport mast17_0 from \"./mast17.json\";\n\nconst requirementAndDictionaryPairs = new Map([\n  [\n    \"coins17\",\n    {\n      id: \"coins17\",\n      name: \"情報科学類 / 2017年度入学\",\n      ...getRequirementAndDictionaryFromJSON(coins17_0, codeToCourse),\n    },\n  ],\n  [\n    \"mast17\",\n    {\n      id: \"mast17\",\n      name: \"情報メディア創成学類 / 2017年度入学\",\n      ...getRequirementAndDictionaryFromJSON(mast17_0, codeToCourse),\n    },\n  ],\n  [\n    \"klis17\",\n    {\n      id: \"klis17\",\n      name: \"知識情報・図書館学類 / 2017年度入学\",\n      ...getRequirementAndDictionaryFromJSON(klis17_0, codeToCourse),\n    },\n  ],\n]);\n\nexport default requirementAndDictionaryPairs;\n","import { RequirementRegistrationStatusBadge } from \"../badges\";\nimport type Plan from \"../Plan\";\nimport type Requirements from \"../Requirements\";\nimport type {\n  RequirementWithChildren,\n  RequirementWithCourses,\n} from \"../Requirements\";\n\nconst CreditsCountLabelDelimiter = () => (\n  <span className=\"text-muted\"> / </span>\n);\n\nconst ExceededCreditsCountLabel: React.FC<{ creditsCount: number }> = ({\n  creditsCount,\n}) => (\n  <>\n    <span className=\"text-muted\">(</span>+{creditsCount}\n    <span className=\"text-muted\">)</span>\n  </>\n);\n\nconst CreditsCountLabels: React.FC<{\n  requirement: Requirements;\n  plan: Plan;\n}> = ({ requirement, plan }) => {\n  const creditsCount = requirement.getRegisteredCreditCounts(plan, false);\n  const exceededCreditsCount = requirement.getRegisteredCreditCounts(\n    plan,\n    true\n  );\n  const requiredCreditsCount = requirement.getRequiredCreditCount(\n    plan.selectionNameToOptionName\n  );\n\n  return (\n    <div>\n      <span>\n        <span className=\"text-muted\">修得</span>\n        <> </>\n        <strong className=\"text-success\">{creditsCount.acquired}</strong>\n        {exceededCreditsCount.acquired > creditsCount.acquired ? (\n          <ExceededCreditsCountLabel\n            creditsCount={exceededCreditsCount.acquired - creditsCount.acquired}\n          />\n        ) : (\n          <></>\n        )}\n      </span>\n      <CreditsCountLabelDelimiter />\n      <span>\n        <span className=\"text-muted\">履修</span>\n        <> </>\n        <strong className=\"text-primary\">{creditsCount.registered}</strong>\n        {exceededCreditsCount.registered > creditsCount.registered ? (\n          <ExceededCreditsCountLabel\n            creditsCount={\n              exceededCreditsCount.registered - creditsCount.registered\n            }\n          />\n        ) : (\n          <></>\n        )}\n      </span>\n      <CreditsCountLabelDelimiter />\n      <span>\n        <span className=\"text-muted\">必要</span>\n        <> </>\n        <strong>\n          {requiredCreditsCount.min === requiredCreditsCount.max\n            ? requiredCreditsCount.min\n            : `${requiredCreditsCount.min}~${requiredCreditsCount.max}`}\n        </strong>\n      </span>\n    </div>\n  );\n};\n\nexport const RequirementSummaryView: React.FC<{\n  requirement: RequirementWithChildren | RequirementWithCourses;\n  plan: Plan;\n}> = ({ requirement, plan }) => {\n  const status = requirement.getStatus(plan);\n  return (\n    <>\n      <h5 className=\"d-flex justify-content-between align-items-center\">\n        <div>{requirement.name}</div>\n        <div className=\"ml-2 flex-shrink-0\">\n          <RequirementRegistrationStatusBadge status={status} />\n        </div>\n      </h5>\n      <div>\n        {requirement.description === undefined ? (\n          <></>\n        ) : (\n          <div className=\"text-muted\">{requirement.description}</div>\n        )}\n        <CreditsCountLabels requirement={requirement} plan={plan} />\n      </div>\n    </>\n  );\n};\n","import { ListGroup } from \"react-bootstrap\";\nimport type Course from \"../Course\";\nimport type FilterType from \"../FilterType\";\nimport type Plan from \"../Plan\";\nimport type { RegisteredCreditCounts } from \"../Plan\";\nimport type RegistrationStatusLockTarget from \"../RegistrationStatusLockTarget\";\nimport type {\n  RequirementWithChildren,\n  RequirementWithCourses,\n} from \"../Requirements\";\nimport InnerRequirementView from \"./InnerRequirementView\";\nimport { RequirementSummaryView } from \"./RequirementSummaryView\";\n\nconst RequirementWithChildrenView: React.FC<{\n  requirement: RequirementWithChildren;\n  filterType: FilterType;\n  lockTarget: RegistrationStatusLockTarget;\n  plan: Plan;\n  onCourseClick: (course: Course, requirement: RequirementWithCourses) => void;\n  onOthersCountsChange: (\n    requirement: RequirementWithCourses,\n    newOthersCount: RegisteredCreditCounts\n  ) => void;\n  onSelectionChange: (selectionName: string, newOptionName: string) => void;\n}> = ({\n  requirement,\n  filterType,\n  lockTarget,\n  plan,\n  onCourseClick,\n  onOthersCountsChange,\n  onSelectionChange,\n}) => (\n  <>\n    <RequirementSummaryView requirement={requirement} plan={plan} />\n    <ListGroup className=\"mt-3\">\n      {requirement.children.map((child) => (\n        <ListGroup.Item key={child.id}>\n          <InnerRequirementView\n            requirement={child}\n            plan={plan}\n            filterType={filterType}\n            lockTarget={lockTarget}\n            onCourseClick={onCourseClick}\n            onSelectionChange={onSelectionChange}\n            onOthersCountsChange={onOthersCountsChange}\n          />\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n  </>\n);\n\nexport default RequirementWithChildrenView;\n","import { useCallback } from \"react\";\nimport { Badge, ListGroup, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { CourseRegistrationStatusBadge, DisabledCourseBadge } from \"../badges\";\nimport type Course from \"../Course\";\nimport Plan, {\n  getNextStatus,\n  isRegistrable,\n  RegistrationStatus,\n} from \"../Plan\";\nimport type RegistrationStatusLockTarget from \"../RegistrationStatusLockTarget\";\nimport type Requirements from \"../Requirements\";\nimport type { RequirementWithCourses } from \"../Requirements\";\n\nconst CourseListItem: React.FC<{\n  course: Course;\n  newRequirement: Requirements;\n  plan: Plan;\n  lockTarget: RegistrationStatusLockTarget;\n  onClick: () => void;\n}> = ({ course, onClick, newRequirement, plan, lockTarget }) => {\n  const status =\n    plan.courseToStatus.get(course) ?? RegistrationStatus.Unregistered;\n  const currentRequirement = plan.courseToRequirement.get(course);\n  const isRegisteredButInvalid =\n    status !== RegistrationStatus.Unregistered &&\n    currentRequirement !== newRequirement;\n  const isRegistrable0 = isRegistrable({\n    course,\n    courseToStatus: plan.courseToStatus,\n  });\n  const action =\n    (getNextStatus({ currentStatus: status, lockTarget }) !== status &&\n      isRegistrable0) ||\n    isRegisteredButInvalid;\n  const handleClick = useCallback(() => {\n    if (isRegistrable0) {\n      onClick();\n    }\n  }, [isRegistrable0, onClick]);\n\n  return (\n    <ListGroup.Item\n      action={action}\n      onClick={handleClick}\n      variant={\n        isRegisteredButInvalid\n          ? \"dark\"\n          : status === RegistrationStatus.Acquired\n          ? \"success\"\n          : status === RegistrationStatus.Registered\n          ? \"primary\"\n          : undefined\n      }\n    >\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <div>\n          <div>{course.title}</div>\n          <code>{course.code}</code>\n        </div>\n        <div className=\"ml-2 text-right flex-shrink-0\">\n          {isRegisteredButInvalid ? (\n            <OverlayTrigger\n              overlay={\n                <Tooltip id=\"tooltip1\">\n                  {currentRequirement === undefined\n                    ? \"この科目はどの科目群にも割り当てられていないため、合計単位数の計算に含まれません。\"\n                    : \"この科目はほかの科目群に割り当てられているため、ここでは合計単位数の計算に含まれません。\"}\n                </Tooltip>\n              }\n            >\n              {currentRequirement === undefined ? (\n                <Badge variant=\"secondary\">?</Badge>\n              ) : (\n                <Badge variant=\"warning\">!</Badge>\n              )}\n            </OverlayTrigger>\n          ) : (\n            <></>\n          )}\n          {isRegistrable0 ? (\n            <CourseRegistrationStatusBadge status={status} />\n          ) : (\n            <DisabledCourseBadge id=\"tooltip2\" />\n          )}\n          <div>\n            <span className=\"text-muted\">単位数</span>{\" \"}\n            <strong>{course.creditCount}</strong>\n          </div>\n        </div>\n      </div>\n    </ListGroup.Item>\n  );\n};\n\nconst CourseList = ({\n  requirement,\n  courses,\n  plan,\n  onCourseClick,\n  lockTarget,\n}: {\n  requirement: RequirementWithCourses;\n  courses: readonly Course[];\n  plan: Plan;\n  lockTarget: RegistrationStatusLockTarget;\n  onCourseClick: (course: Course) => void;\n}) => (\n  <ListGroup>\n    {courses.map((course: Course) => (\n      <CourseListItem\n        key={course.code}\n        course={course}\n        plan={plan}\n        newRequirement={requirement}\n        lockTarget={lockTarget}\n        onClick={() => onCourseClick(course)}\n      />\n    ))}\n  </ListGroup>\n);\n\nexport default CourseList;\n","import { useCallback, useState } from \"react\";\nimport {\n  Button,\n  ButtonToolbar,\n  Card,\n  Col,\n  Collapse,\n  Form,\n} from \"react-bootstrap\";\nimport type Course from \"../Course\";\nimport FilterType from \"../FilterType\";\nimport Plan, { RegisteredCreditCounts, RegistrationStatus } from \"../Plan\";\nimport type RegistrationStatusLockTarget from \"../RegistrationStatusLockTarget\";\nimport type { RequirementWithCourses } from \"../Requirements\";\nimport CourseList from \"./CourseList\";\nimport { RequirementSummaryView } from \"./RequirementSummaryView\";\nimport styles from \"./RequirementWithCoursesView.module.css\";\n\nconst OthersCountInput: React.FC<{\n  currentOthersCount: RegisteredCreditCounts;\n  onReturn: (newOthersCount: RegisteredCreditCounts) => void;\n  onHide: () => void;\n}> = ({ currentOthersCount, onReturn, onHide }) => {\n  const [acquired, setAcquired] = useState<number | undefined>();\n  const [\n    registeredExcludingAcquired,\n    setRegisteredExcludingAcquired,\n  ] = useState<number | undefined>();\n  const [\n    registeredIncludingAcquired,\n    setRegisteredIncludingAcquired,\n  ] = useState<number | undefined>();\n\n  const computed = {\n    acquired: acquired ?? currentOthersCount.acquired,\n    registered:\n      registeredIncludingAcquired !== undefined\n        ? registeredIncludingAcquired\n        : registeredExcludingAcquired !== undefined\n        ? (acquired !== undefined ? acquired : currentOthersCount.acquired) +\n          registeredExcludingAcquired\n        : acquired !== undefined\n        ? currentOthersCount.registered + acquired - currentOthersCount.acquired\n        : currentOthersCount.registered,\n  };\n\n  return (\n    <Card border=\"primary\">\n      <Card.Header>単位数を入力</Card.Header>\n      <Card.Body>\n        <Form\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            onReturn(computed);\n            onHide();\n          }}\n        >\n          <Form.Row>\n            <Form.Group as={Col} md=\"4\">\n              <Form.Label>\n                修得済みの単位数 <span className=\"text-muted\">(a)</span>\n              </Form.Label>\n              <Form.Control\n                type=\"number\"\n                min={0}\n                step={0.5}\n                placeholder={`${computed.acquired}`}\n                value={acquired === undefined ? \"\" : `${acquired}`}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  setAcquired(\n                    e.target.value === \"\" ? undefined : +e.target.value\n                  )\n                }\n                isInvalid={computed.acquired < 0}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                (a) &gt;= 0\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"4\">\n              <Form.Label>\n                履修する単位数 <span className=\"text-muted\">(b)</span>\n              </Form.Label>\n              <Form.Control\n                type=\"number\"\n                min={0}\n                step={0.5}\n                placeholder={`${computed.registered - computed.acquired}`}\n                value={\n                  registeredExcludingAcquired === undefined\n                    ? \"\"\n                    : `${registeredExcludingAcquired}`\n                }\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  if (e.target.value === \"\") {\n                    setRegisteredExcludingAcquired(undefined);\n                  } else {\n                    setRegisteredExcludingAcquired(+e.target.value);\n                    setRegisteredIncludingAcquired(undefined);\n                  }\n                }}\n                isInvalid={computed.acquired > computed.registered}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                (b) &gt;= 0\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"4\">\n              <Form.Label>\n                計 <span className=\"text-muted\">(a) + (b)</span>\n              </Form.Label>\n              <Form.Control\n                type=\"number\"\n                min={0}\n                step={0.5}\n                placeholder={`${computed.registered}`}\n                value={\n                  registeredIncludingAcquired === undefined\n                    ? \"\"\n                    : `${registeredIncludingAcquired}`\n                }\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  if (e.target.value === \"\") {\n                    setRegisteredIncludingAcquired(undefined);\n                  } else {\n                    setRegisteredIncludingAcquired(+e.target.value);\n                    setRegisteredExcludingAcquired(undefined);\n                  }\n                }}\n              />\n            </Form.Group>\n          </Form.Row>\n          <ButtonToolbar>\n            <Button\n              type=\"submit\"\n              disabled={\n                computed.acquired < 0 || computed.acquired > computed.registered\n              }\n            >\n              OK\n            </Button>\n            <Button variant=\"secondary\" onClick={onHide}>\n              キャンセル\n            </Button>\n          </ButtonToolbar>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst RequirementWithCoursesView: React.FC<{\n  requirement: RequirementWithCourses;\n  filterType: FilterType;\n  lockTarget: RegistrationStatusLockTarget;\n  plan: Plan;\n  onCourseClick: (course: Course, requirement: RequirementWithCourses) => void;\n  onOthersCountsChange: (newOthersCount: RegisteredCreditCounts) => void;\n}> = ({\n  requirement,\n  filterType,\n  lockTarget,\n  plan,\n  onCourseClick,\n  onOthersCountsChange,\n}) => {\n  const [open, setOpen] = useState(false);\n  const [showsInput, setShowsInput] = useState(false);\n\n  const courses = requirement.courses\n    .filter(\n      (course) =>\n        filterType === FilterType.None ||\n        (plan.courseToStatus.has(course) &&\n          plan.courseToStatus.get(course) !== RegistrationStatus.Unregistered)\n    )\n    .filter(\n      (course) =>\n        filterType !== FilterType.Valid ||\n        requirement === plan.courseToRequirement.get(course)\n    );\n\n  const onCollapseExiting = useCallback((e: HTMLElement) => {\n    const root = e.closest(`.${styles.RequirementWithCoursesView}`);\n    if (root === null) {\n      throw new Error();\n    }\n    const rect = root.getBoundingClientRect();\n    const sticky = root.getElementsByClassName(\"sticky-top\")[0];\n    if (sticky === undefined) {\n      throw new Error();\n    }\n    const stickyTop = parseInt(\n      getComputedStyle(sticky).getPropertyValue(\"--top\")\n    );\n    if (rect.top < stickyTop) {\n      window.scrollTo({\n        top: window.scrollY + rect.top - stickyTop,\n      });\n    }\n  }, []);\n\n  return (\n    <div className={styles.RequirementWithCoursesView}>\n      <div className=\"sticky-top\">\n        <RequirementSummaryView requirement={requirement} plan={plan} />\n        {courses.length === 0 ? (\n          requirement.allowsOthers ? (\n            showsInput ? (\n              <></>\n            ) : (\n              <Button\n                block\n                className=\"mt-3\"\n                variant=\"secondary\"\n                onClick={() => setShowsInput(true)}\n              >\n                単位数を入力\n              </Button>\n            )\n          ) : (\n            <Button block className=\"mt-3\" variant=\"outline-secondary\" disabled>\n              {filterType === FilterType.None ? \"\" : \"履修する\"}科目はありません\n            </Button>\n          )\n        ) : (\n          <Button\n            block\n            className=\"mt-3\"\n            onClick={() => setOpen(!open)}\n            variant={open ? \"primary\" : \"outline-secondary\"}\n          >\n            {filterType === FilterType.None ? \"\" : \"履修する\"}科目を\n            {open ? \"非\" : \"\"}表示\n          </Button>\n        )}\n      </div>\n      {showsInput ? (\n        <div className=\"mt-3\">\n          <OthersCountInput\n            currentOthersCount={\n              plan.requirementToOthersCount.get(requirement) || {\n                acquired: 0,\n                registered: 0,\n              }\n            }\n            onReturn={onOthersCountsChange}\n            onHide={() => setShowsInput(false)}\n          />\n        </div>\n      ) : (\n        <></>\n      )}\n      <Collapse in={open && courses.length !== 0} onExiting={onCollapseExiting}>\n        {\n          <div>\n            <div className=\"mt-3\">\n              <CourseList\n                courses={courses}\n                plan={plan}\n                requirement={requirement}\n                lockTarget={lockTarget}\n                onCourseClick={(course) => onCourseClick(course, requirement)}\n              />\n            </div>\n          </div>\n        }\n      </Collapse>\n    </div>\n  );\n};\n\nexport default RequirementWithCoursesView;\n","import { useCallback } from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\nimport type Course from \"../Course\";\nimport type FilterType from \"../FilterType\";\nimport type Plan from \"../Plan\";\nimport type { RegisteredCreditCounts } from \"../Plan\";\nimport type RegistrationStatusLockTarget from \"../RegistrationStatusLockTarget\";\nimport type {\n  RequirementWithCourses,\n  SelectionRequirement,\n} from \"../Requirements\";\nimport InnerRequirementView from \"./InnerRequirementView\";\n\nconst SelectionRequirementView: React.FC<{\n  requirement: SelectionRequirement;\n  filterType: FilterType;\n  lockTarget: RegistrationStatusLockTarget;\n  plan: Plan;\n  onCourseClick: (course: Course, requirement: RequirementWithCourses) => void;\n  onOthersCountsChange: (\n    requirement: RequirementWithCourses,\n    newOthersCount: RegisteredCreditCounts\n  ) => void;\n  onSelectionChange: (selectionName: string, newOptionName: string) => void;\n}> = ({\n  requirement,\n  filterType,\n  lockTarget,\n  plan,\n  onCourseClick,\n  onOthersCountsChange,\n  onSelectionChange,\n}) => {\n  const selectedOptionName = requirement.getSelectedOptionName(\n    plan.selectionNameToOptionName\n  );\n  const selectedRequirement = requirement.getSelectedRequirement(\n    plan.selectionNameToOptionName\n  );\n\n  const handleSelectionChange = useCallback(\n    (e: React.ChangeEvent<HTMLSelectElement>) => {\n      onSelectionChange(requirement.name, e.target.value);\n    },\n    [onSelectionChange, requirement.name]\n  );\n\n  return (\n    <>\n      <InputGroup>\n        <InputGroup.Prepend>\n          <InputGroup.Text>{requirement.name}</InputGroup.Text>\n        </InputGroup.Prepend>\n        <Form.Control\n          as=\"select\"\n          custom\n          value={selectedOptionName}\n          onChange={handleSelectionChange}\n        >\n          {requirement.options.map((option) => (\n            <option key={option.name}>{option.name}</option>\n          ))}\n        </Form.Control>\n      </InputGroup>\n      {selectedRequirement === undefined ? (\n        <></>\n      ) : (\n        <div className=\"mt-3\">\n          <InnerRequirementView\n            requirement={selectedRequirement}\n            plan={plan}\n            filterType={filterType}\n            lockTarget={lockTarget}\n            onCourseClick={onCourseClick}\n            onOthersCountsChange={onOthersCountsChange}\n            onSelectionChange={onSelectionChange}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default SelectionRequirementView;\n","import type Course from \"../Course\";\nimport type FilterType from \"../FilterType\";\nimport type Plan from \"../Plan\";\nimport type { RegisteredCreditCounts } from \"../Plan\";\nimport type RegistrationStatusLockTarget from \"../RegistrationStatusLockTarget\";\nimport Requirements, {\n  RequirementWithChildren,\n  RequirementWithCourses,\n} from \"../Requirements\";\nimport RequirementWithChildrenView from \"./RequirementWithChildrenView\";\nimport RequirementWithCoursesView from \"./RequirementWithCoursesView\";\nimport SelectionRequirementView from \"./SelectionRequirementView\";\n\nconst InnerRequirementView: React.FC<{\n  requirement: Requirements;\n  filterType: FilterType;\n  lockTarget: RegistrationStatusLockTarget;\n  plan: Plan;\n  onCourseClick: (course: Course, requirement: RequirementWithCourses) => void;\n  onOthersCountsChange: (\n    requirement: RequirementWithCourses,\n    newOthersCount: RegisteredCreditCounts\n  ) => void;\n  onSelectionChange: (selectionName: string, newOptionName: string) => void;\n}> = ({\n  requirement,\n  filterType,\n  lockTarget,\n  plan,\n  onCourseClick,\n  onOthersCountsChange,\n  onSelectionChange,\n}) => {\n  if (requirement instanceof RequirementWithChildren) {\n    return (\n      <RequirementWithChildrenView\n        requirement={requirement}\n        plan={plan}\n        filterType={filterType}\n        lockTarget={lockTarget}\n        onCourseClick={onCourseClick}\n        onOthersCountsChange={onOthersCountsChange}\n        onSelectionChange={onSelectionChange}\n      />\n    );\n  } else if (requirement instanceof RequirementWithCourses) {\n    return (\n      <RequirementWithCoursesView\n        requirement={requirement}\n        plan={plan}\n        filterType={filterType}\n        lockTarget={lockTarget}\n        onCourseClick={onCourseClick}\n        onOthersCountsChange={(creditsCounts) =>\n          onOthersCountsChange(requirement, creditsCounts)\n        }\n      />\n    );\n  } else {\n    return (\n      <SelectionRequirementView\n        requirement={requirement}\n        plan={plan}\n        filterType={filterType}\n        lockTarget={lockTarget}\n        onCourseClick={onCourseClick}\n        onOthersCountsChange={onOthersCountsChange}\n        onSelectionChange={onSelectionChange}\n      />\n    );\n  }\n};\n\nexport default InnerRequirementView;\n","import { useState } from \"react\";\nimport { Button, Card, Modal } from \"react-bootstrap\";\nimport type Plan from \"../Plan\";\nimport type { RequirementWithCourses } from \"../Requirements\";\nimport { RequirementSummaryView } from \"./RequirementSummaryView\";\n\nconst ReassignmentConfirmationModal: React.FC<{\n  currentRequirement: RequirementWithCourses;\n  plan: Plan;\n  onReturn: (value: boolean) => void;\n  onExited: () => void;\n}> = ({ currentRequirement, plan, onReturn, onExited }) => {\n  const [show, setShow] = useState(true);\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => {\n        setShow(false);\n        onReturn(false);\n      }}\n      onExited={onExited}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>科目群の割り当てを変更</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>\n          この科目は、すでに以下の科目群に割り当てられています。\n          <strong>続けると、この科目群への割り当ては解除されます。</strong>\n        </p>\n        <p>各科目に割り当てできる科目群は1つまでです。</p>\n        <Card body>\n          <RequirementSummaryView\n            requirement={currentRequirement}\n            plan={plan}\n          />\n        </Card>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          variant=\"secondary\"\n          onClick={() => {\n            setShow(false);\n            onReturn(false);\n          }}\n        >\n          キャンセル\n        </Button>\n        <Button\n          variant=\"primary\"\n          onClick={() => {\n            setShow(false);\n            onReturn(true);\n          }}\n        >\n          続ける\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ReassignmentConfirmationModal;\n","import type Course from \"../Course\";\nimport type FilterType from \"../FilterType\";\nimport getValueFromModal, { useModals } from \"../getValueFromModal\";\nimport Plan, {\n  getNextStatus,\n  RegisteredCreditCounts,\n  RegistrationStatus,\n} from \"../Plan\";\nimport type RegistrationStatusLockTarget from \"../RegistrationStatusLockTarget\";\nimport type Requirements from \"../Requirements\";\nimport type { RequirementWithCourses } from \"../Requirements\";\nimport InnerRequirementView from \"./InnerRequirementView\";\nimport ReassignmentConfirmationModal from \"./ReassignmentConfirmationModal\";\n\nconst RequirementView = ({\n  requirement,\n  plan,\n  filterType,\n  lockTarget,\n  onChange,\n}: {\n  requirement: Requirements;\n  filterType: FilterType;\n  lockTarget: RegistrationStatusLockTarget;\n  plan: Plan;\n  onChange: (newPlan: Plan) => void;\n}) => {\n  const {\n    courseToStatus,\n    courseToRequirement,\n    requirementToOthersCount,\n    selectionNameToOptionName,\n  } = plan;\n  const { modals, setModalsAndCount } = useModals();\n\n  const handleCourseClick = async (\n    course: Course,\n    requirement: RequirementWithCourses\n  ) => {\n    const currentStatus: RegistrationStatus =\n      courseToStatus.get(course) || RegistrationStatus.Unregistered;\n    const currentRequirement = courseToRequirement.get(course);\n    let nextCourseToStatus = courseToStatus;\n    if (\n      currentStatus === RegistrationStatus.Unregistered ||\n      currentRequirement === requirement\n    ) {\n      const nextStatus = getNextStatus({ currentStatus, lockTarget });\n      nextCourseToStatus = new Map([...courseToStatus, [course, nextStatus]]);\n    } else if (\n      currentRequirement !== undefined &&\n      !(await getValueFromModal(\n        ReassignmentConfirmationModal,\n        { currentRequirement, plan },\n        setModalsAndCount\n      ))\n    ) {\n      return;\n    }\n    onChange({\n      ...plan,\n      courseToStatus: nextCourseToStatus,\n      courseToRequirement: new Map([\n        ...courseToRequirement,\n        [course, requirement],\n      ]),\n    });\n  };\n\n  const handleOthersCountsChange = (\n    requirement: RequirementWithCourses,\n    newOthersCount: RegisteredCreditCounts\n  ) => {\n    onChange({\n      ...plan,\n      requirementToOthersCount: new Map([\n        ...requirementToOthersCount,\n        [requirement, newOthersCount],\n      ]),\n    });\n  };\n\n  const handleSelectionChange = (\n    selectionName: string,\n    newOptionName: string\n  ) => {\n    const nextSelectionNameToOptionName = new Map([\n      ...selectionNameToOptionName,\n      [selectionName, newOptionName],\n    ]);\n    const visibleRequirements = requirement.getVisibleRequirements(\n      nextSelectionNameToOptionName\n    );\n    const nextCourseToRequirement = new Map(\n      [...courseToRequirement.entries()].filter(([_, requirement]) =>\n        visibleRequirements.includes(requirement)\n      )\n    );\n    onChange({\n      ...plan,\n      courseToRequirement: nextCourseToRequirement,\n      selectionNameToOptionName: nextSelectionNameToOptionName,\n    });\n  };\n\n  return (\n    <>\n      {modals}\n      <InnerRequirementView\n        requirement={requirement}\n        plan={plan}\n        filterType={filterType}\n        lockTarget={lockTarget}\n        onCourseClick={handleCourseClick}\n        onOthersCountsChange={handleOthersCountsChange}\n        onSelectionChange={handleSelectionChange}\n      />\n    </>\n  );\n};\n\nexport default RequirementView;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useState } from \"react\";\nimport {\n  Alert,\n  ButtonToolbar,\n  Card,\n  Container,\n  Dropdown,\n  Form,\n  Nav,\n  Navbar,\n  Tab,\n} from \"react-bootstrap\";\nimport {\n  HashRouter,\n  Link,\n  Redirect,\n  Route,\n  Switch,\n  useParams,\n} from \"react-router-dom\";\nimport { useLocalStorage } from \"react-use\";\nimport \"./App.css\";\nimport { AssignmentsFindButton } from \"./AssignmentsFindView\";\nimport { RequirementRegistrationStatusBadge } from \"./badges\";\nimport CollectivelyCourseSetView from \"./CollectivelyCourseSetView\";\nimport codeToCourse from \"./courses\";\nimport ExportView from \"./ExportView\";\nimport FilterType from \"./FilterType\";\nimport ImportView from \"./ImportView\";\nimport Plan, {\n  emptyPlan,\n  fromJSON,\n  PlanJSON,\n  RegistrationStatus,\n  toJSON,\n} from \"./Plan\";\nimport RegistrationStatusLockTarget from \"./RegistrationStatusLockTarget\";\nimport requirementAndDictionaryPairs from \"./requirementInstances\";\nimport type Requirements from \"./Requirements\";\nimport type { RequirementWithCourses } from \"./Requirements\";\nimport RequirementView from \"./RequirementView\";\n\nconst StatusAlert: React.FC<{\n  requirement: Requirements;\n  plan: Plan;\n}> = ({ requirement, plan }) => {\n  const status = requirement.getStatus(plan);\n  const variant =\n    status === RegistrationStatus.Acquired\n      ? \"success\"\n      : status === RegistrationStatus.Registered\n      ? \"primary\"\n      : \"secondary\";\n\n  return (\n    <Alert variant={variant} className=\"d-flex align-items-center\">\n      <div className=\"mr-2\">\n        <RequirementRegistrationStatusBadge status={status} />\n      </div>\n      現在の\n      {status === RegistrationStatus.Acquired\n        ? \"修得状況は要件を満たしています。\"\n        : status === RegistrationStatus.Registered\n        ? \"履修状況は要件を満たしていますが、修得状況は要件を満たしていません。\"\n        : \"履修状況は要件を満たしていません。\"}\n    </Alert>\n  );\n};\n\nconst RequirementWithConfiguration: React.FC<{\n  requirement: Requirements;\n  idToRequirement: ReadonlyMap<string, RequirementWithCourses>;\n  plan: Plan;\n  setPlan: (nextPlan: Plan) => void;\n}> = ({ requirement, idToRequirement, plan, setPlan }) => {\n  const [filterType, setFilterType] = useState(FilterType.None);\n  const { lockTarget, setLockTarget } = useLockTarget(filterType);\n\n  return (\n    <>\n      <Tab.Container defaultActiveKey=\"general\">\n        <Card className=\"mb-3\">\n          <Card.Header>\n            <Nav variant=\"tabs\">\n              <Nav.Item>\n                <Nav.Link eventKey=\"general\">一般</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"backup\">バックアップ</Nav.Link>\n              </Nav.Item>\n            </Nav>\n          </Card.Header>\n          <Card.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey=\"general\">\n                <Form.Group>\n                  <Form.Label>履修状況のロック</Form.Label>\n                  {[\n                    {\n                      label: \"ロックしない\",\n                      lockTarget: RegistrationStatusLockTarget.None,\n                      disabled: filterType !== FilterType.None,\n                    },\n                    {\n                      label: \"[履修する] と [修得済み] の間の変更のみ許可\",\n                      lockTarget: RegistrationStatusLockTarget.Unregistered,\n                    },\n                    {\n                      label: \"[履修しない] と [履修する] の間の変更のみ許可\",\n                      lockTarget: RegistrationStatusLockTarget.Acquired,\n                      disabled: filterType !== FilterType.None,\n                    },\n                    {\n                      label: \"すべてロックする\",\n                      lockTarget: RegistrationStatusLockTarget.All,\n                    },\n                  ].map(({ label, disabled, lockTarget: lockTarget1 }) => (\n                    <Form.Check\n                      custom\n                      type=\"radio\"\n                      id={`lockTargetCheck${lockTarget1}`}\n                      label={label}\n                      key={lockTarget1}\n                      disabled={disabled}\n                      checked={lockTarget === lockTarget1}\n                      onChange={() => setLockTarget(lockTarget1)}\n                    />\n                  ))}\n                </Form.Group>\n                <Form.Group>\n                  <Form.Check\n                    custom\n                    id=\"filterTypeCheck0\"\n                    label=\"履修する科目のみ表示\"\n                    checked={filterType !== FilterType.None}\n                    onChange={() => {\n                      if (filterType === FilterType.None) {\n                        setFilterType(FilterType.Registered);\n                      } else {\n                        setFilterType(FilterType.None);\n                      }\n                    }}\n                  />\n                  <Form.Check\n                    custom\n                    id=\"filterTypeCheck1\"\n                    label=\"単位数の計算に含まれる科目のみ表示\"\n                    checked={filterType === FilterType.Valid}\n                    onChange={() => {\n                      if (filterType === FilterType.Valid) {\n                        setFilterType(FilterType.Registered);\n                      } else {\n                        setFilterType(FilterType.Valid);\n                      }\n                    }}\n                  />\n                </Form.Group>\n                <ButtonToolbar>\n                  <CollectivelyCourseSetView\n                    requirement={requirement}\n                    codeToCourse={codeToCourse}\n                    idToRequirement={idToRequirement}\n                    plan={plan}\n                    onSubmit={setPlan}\n                  />\n                  <AssignmentsFindButton\n                    requirement={requirement}\n                    idToRequirement={idToRequirement}\n                    codeToCourse={codeToCourse}\n                    plan={plan}\n                    onSubmit={setPlan}\n                  />\n                </ButtonToolbar>\n              </Tab.Pane>\n              <Tab.Pane eventKey=\"backup\">\n                <p>\n                  作業内容はブラウザに自動保存されますが、別にバックアップをとれます。\n                </p>\n                <ExportView plan={plan} />\n                <hr />\n                <ImportView\n                  onSubmit={setPlan}\n                  codeToCourse={codeToCourse}\n                  idToRequirement={idToRequirement}\n                />\n              </Tab.Pane>\n            </Tab.Content>\n          </Card.Body>\n        </Card>\n      </Tab.Container>\n      <StatusAlert requirement={requirement} plan={plan} />\n      <div className=\"mb-3\">\n        <RequirementView\n          requirement={requirement}\n          lockTarget={lockTarget}\n          filterType={filterType}\n          plan={plan}\n          onChange={setPlan}\n        />\n      </div>\n    </>\n  );\n};\n\nconst InnerMain: React.FC<{\n  requirement: Requirements;\n  idToRequirement: ReadonlyMap<string, RequirementWithCourses>;\n  requirementId: string;\n  requirementName: string;\n}> = ({ requirement, idToRequirement, requirementId, requirementName }) => {\n  const { plan, setPlan } = usePlan(requirementId);\n\n  return (\n    <>\n      <Dropdown className=\"mb-3\">\n        <Dropdown.Toggle id=\"department-dropdown\" variant=\"secondary\">\n          <span\n            style={{\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n            }}\n          >\n            学類\n            <> : </>\n            <strong>{requirementName}</strong>\n          </span>\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {[...requirementAndDictionaryPairs.values()].map(({ id, name }) => (\n            <Dropdown.Item\n              as={Link}\n              to={`/${id}`}\n              active={id === requirementId}\n              key={id}\n            >\n              {name}\n            </Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n      <RequirementWithConfiguration\n        requirement={requirement}\n        idToRequirement={idToRequirement}\n        plan={plan}\n        setPlan={setPlan}\n      />\n    </>\n  );\n};\n\nconst Main: React.FC = () => {\n  const { requirementId }: { requirementId: string } = useParams();\n  if (requirementId === undefined) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const { requirement, idToRequirement, name: requirementName } =\n    requirementAndDictionaryPairs.get(requirementId) ?? {};\n  if (\n    requirement === undefined ||\n    idToRequirement === undefined ||\n    requirementName === undefined\n  ) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <InnerMain\n      requirement={requirement}\n      idToRequirement={idToRequirement}\n      requirementId={requirementId}\n      requirementName={requirementName}\n    />\n  );\n};\n\nconst App: React.FC = () => (\n  <HashRouter>\n    <Navbar variant=\"dark\" bg=\"dark\">\n      <Navbar.Brand>卒業要件を満たしたい</Navbar.Brand>\n    </Navbar>\n    <Container>\n      <Alert variant=\"danger\" className=\"my-3\">\n        このツールの結果を利用する場合、必ず履修要覧や支援室などでその結果が正しいことを確認するようにしてください。\n        <strong>\n          科目や要件の定義が誤っていることや、実際には認められない履修の組み合わせが存在することがあります。\n        </strong>\n      </Alert>\n      <Switch>\n        <Route path=\"/:requirementId\">\n          <Main />\n        </Route>\n        <Route path=\"/\">\n          <Redirect to=\"/coins17\" />\n        </Route>\n      </Switch>\n    </Container>\n  </HashRouter>\n);\n\nconst useLockTarget = (filterType: FilterType) => {\n  const [lockTarget, setLockTarget] = useState(\n    RegistrationStatusLockTarget.None\n  );\n\n  if (filterType === FilterType.None) {\n    return { lockTarget, setLockTarget };\n  } else if (lockTarget === RegistrationStatusLockTarget.None) {\n    return {\n      lockTarget: RegistrationStatusLockTarget.Unregistered,\n      setLockTarget,\n    };\n  } else if (lockTarget === RegistrationStatusLockTarget.Acquired) {\n    return {\n      lockTarget: RegistrationStatusLockTarget.All,\n      setLockTarget,\n    };\n  } else {\n    return { lockTarget, setLockTarget };\n  }\n};\n\nconst COURSES_STATE = \"courses-state\";\n\nconst usePlanMap = () => {\n  const [storedJSON, setStoredJSON] = useLocalStorage<\n    readonly (readonly [string, PlanJSON])[]\n  >(COURSES_STATE);\n  const [planMap0, setPlanMap0] = useState(() => {\n    if (storedJSON === undefined) {\n      const storedPlanMap: ReadonlyMap<string, Plan> = new Map();\n      return storedPlanMap;\n    } else {\n      try {\n        const storedPlanEntries = storedJSON\n          .map(([requirementName, planJSON]) => {\n            const idToRequirement = requirementAndDictionaryPairs.get(\n              requirementName\n            )?.idToRequirement;\n            if (idToRequirement === undefined) {\n              return undefined;\n            } else {\n              try {\n                return [\n                  requirementName,\n                  fromJSON(planJSON, { codeToCourse, idToRequirement }),\n                ] as const;\n              } catch {\n                return undefined;\n              }\n            }\n          })\n          .filter(\n            (value): value is NonNullable<typeof value> => value !== undefined\n          );\n        const storedPlanMap: ReadonlyMap<string, Plan> = new Map(\n          storedPlanEntries\n        );\n        return storedPlanMap;\n      } catch {\n        const storedPlanMap: ReadonlyMap<string, Plan> = new Map();\n        return storedPlanMap;\n      }\n    }\n  });\n  const setPlanMap = (newPlanMap: ReadonlyMap<string, Plan>) => {\n    const planJSONEntries = [...newPlanMap].map(\n      ([requirementName, plan]) => [requirementName, toJSON(plan)] as const\n    );\n    setPlanMap0(newPlanMap);\n    setStoredJSON(planJSONEntries);\n  };\n  return {\n    planMap: planMap0,\n    setPlanMap,\n  };\n};\n\nconst usePlan = (requirementName: string) => {\n  const { planMap, setPlanMap } = usePlanMap();\n\n  const plan = planMap.get(requirementName) || emptyPlan;\n  const setPlan = (newPlan: Plan) => {\n    const newPlanMap = new Map([...planMap, [requirementName, newPlan]]);\n    setPlanMap(newPlanMap);\n  };\n\n  return { plan, setPlan };\n};\n\nexport default App;\n","import type { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RequirementWithCoursesView\":\"RequirementWithCoursesView_RequirementWithCoursesView__2_BVH\"};"],"sourceRoot":""}